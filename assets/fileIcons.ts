/**
 * Defines icon packs that can be toggled.
 */
export enum IconPack {
	Angular = 'angular',
	Ngrx = 'angular_ngrx',
	React = 'react',
	Redux = 'react_redux',
	Vue = 'vue',
	Vuex = 'vue_vuex'
}

export interface FileIcon {
	/**
	 * Function to return a path to the file
	 */
	file: () => Promise<{ default: string }>;

	/**
	 * Define the file extensions that should use this icon.
	 * E.g. ['js']
	 */
	fileExtensions?: string[];

	/**
	 * Define if there are some static file names that should apply this icon.
	 * E.g. ['sample.js']
	 */
	fileNames?: string[];

	/**
	 * Define if there is a light icon available.
	 */
	light?: boolean;

	/**
	 * Define if there is a high contrast icon available.
	 */
	highContrast?: boolean;

	/**
	 * Define if the icon should be disabled.
	 */
	disabled?: boolean;

	/**
	 * Defines a pack to which this icon belongs. A pack can be toggled and all icons inside this pack can be enabled
	 * or disabled together.
	 */
	enabledFor?: IconPack[];
}

export interface DefaultIcon {
	/**
	 * Function to return a path to the file
	 */
	file: () => Promise<{ default: string }>;

	/**
	 * Define if there is a light icon available.
	 */
	light?: boolean;

	/**
	 * Define if there is a high contrast icon available.
	 */
	highContrast?: boolean;
}

export interface FileIcons {
	/**
	 * Define the default icon for folders.
	 */
	defaultIcon: DefaultIcon;

	/**
	 * Defines all folder icons.
	 */
	icons?: FileIcon[];
}

/**
 * Defines file icons
 */
export const fileIcons: FileIcons = {
	defaultIcon: { file: () => import('./icons/file.svg') },
	icons: [
		{ file: () => import('./icons/html.svg'), fileExtensions: ['html', 'htm', 'xhtml', 'html_vm', 'asp'] },
		{ file: () => import('./icons/pug.svg'), fileExtensions: ['jade', 'pug'] },
		{
			file: () => import('./icons/markdown.svg'),
			fileExtensions: [
				'md',
				'markdown',
				'rst',
			],
		},
		{ file: () => import('./icons/blink_light.svg'), fileExtensions: ['blink'] },
		{ file: () => import('./icons/css.svg'), fileExtensions: ['css'] },
		{ file: () => import('./icons/sass.svg'), fileExtensions: ['scss', 'sass'] },
		{ file: () => import('./icons/less.svg'), fileExtensions: ['less'] },
		{
			file: () => import('./icons/json.svg'),
			fileExtensions: ['json', 'tsbuildinfo'],
			fileNames: [
				'.jscsrc',
				'.jshintrc',
				'tsconfig.json',
				'tslint.json',
				'composer.lock',
				'.jsbeautifyrc',
				'.esformatter',
				'cdp.pid',
			],
		},
		{
			file: () => import('./icons/jinja_light.svg'),
			fileExtensions: ['jinja', 'jinja2', 'j2'],
		},
		{
			file: () => import('./icons/sublime.svg'),
			fileExtensions: ['sublime-project', 'sublime-workspace'],
		},
		{ file: () => import('./icons/yaml.svg'), fileExtensions: ['yaml', 'YAML-tmLanguage', 'yml'] },
		{
			file: () => import('./icons/xml.svg'),
			fileExtensions: [
				'xml',
				'plist',
				'xsd',
				'dtd',
				'xsl',
				'xslt',
				'resx',
				'iml',
				'xquery',
				'tmLanguage',
				'manifest',
				'project',
			],
			fileNames: ['.htaccess'],
		},
		{
			file: () => import('./icons/image.svg'),
			fileExtensions: [
				'png',
				'jpeg',
				'jpg',
				'gif',
				'ico',
				'tif',
				'tiff',
				'psd',
				'psb',
				'ami',
				'apx',
				'bmp',
				'bpg',
				'brk',
				'cur',
				'dds',
				'dng',
				'exr',
				'fpx',
				'gbr',
				'img',
				'jbig2',
				'jb2',
				'jng',
				'jxr',
				'pbm',
				'pgf',
				'pic',
				'raw',
				'webp',
				'eps',
			],
		},
		{ file: () => import('./icons/javascript.svg'), fileExtensions: ['js', 'esx', 'mjs'] },
		{ file: () => import('./icons/react.svg'), fileExtensions: ['jsx'] },
		{ file: () => import('./icons/react_ts.svg'), fileExtensions: ['tsx'] },
		{
			file: () => import('./icons/routing.svg'),
			fileExtensions: ['routing.ts', 'routing.js', 'routes.ts', 'routes.js'],
			fileNames: ['router.js', 'router.ts', 'routes.js', 'routes.ts'],
			enabledFor: [IconPack.Angular, IconPack.Ngrx, IconPack.React, IconPack.Redux, IconPack.Vue, IconPack.Vuex],
		},
		{
			file: () => import('./icons/redux-action.svg'),
			fileExtensions: ['action.js', 'actions.js', 'action.ts', 'actions.ts'],
			fileNames: ['action.js', 'actions.js', 'action.ts', 'actions.ts'],
			enabledFor: [IconPack.Redux],
		},
		{
			file: () => import('./icons/redux-reducer.svg'),
			fileExtensions: ['reducer.js', 'reducers.js', 'reducer.ts', 'reducers.ts'],
			fileNames: ['reducer.js', 'reducers.js', 'reducer.ts', 'reducers.ts'],
			enabledFor: [IconPack.Redux],
		},
		{
			file: () => import('./icons/redux-store.svg'),
			fileExtensions: ['store.js', 'store.ts'],
			fileNames: ['store.js', 'store.ts'],
			enabledFor: [IconPack.Redux],
		},
		{
			file: () => import('./icons/settings.svg'),
			fileExtensions: [
				'ini',
				'dlc',
				'dll',
				'config',
				'conf',
				'properties',
				'prop',
				'settings',
				'option',
				'props',
				'toml',
				'prefs',
				'sln.dotsettings',
				'sln.dotsettings.user',
				'cfg',
			],
			fileNames: [
				'.jshintignore',
				'.buildignore',
				'.mrconfig',
				'.yardopts',
				'manifest.mf',
				'.clang-format',
				'.clang-tidy',
			],
		},
		{ file: () => import('./icons/typescript.svg'), fileExtensions: ['ts'] },
		{ file: () => import('./icons/typescript-def.svg'), fileExtensions: ['d.ts'] },
		{ file: () => import('./icons/markojs.svg'), fileExtensions: ['marko'] },
		{ file: () => import('./icons/pdf.svg'), fileExtensions: ['pdf'] },
		{ file: () => import('./icons/table.svg'), fileExtensions: ['xlsx', 'xls', 'csv', 'tsv'] },
		{
			file: () => import('./icons/vscode.svg'),
			fileExtensions: ['vscodeignore', 'vsixmanifest', 'vsix', 'code-workplace'],
		},
		{
			file: () => import('./icons/visualstudio.svg'),
			fileExtensions: [
				'csproj',
				'ruleset',
				'sln',
				'suo',
				'vb',
				'vbs',
				'vcxitems',
				'vcxitems.filters',
				'vcxproj',
				'vcxproj.filters',
			],
		},
		{
			file: () => import('./icons/database.svg'),
			fileExtensions: ['pdb', 'sql', 'pks', 'pkb', 'accdb', 'mdb', 'sqlite', 'pgsql', 'postgres', 'psql'],
		},
		{ file: () => import('./icons/csharp.svg'), fileExtensions: ['cs', 'csx'] },
		{
			file: () => import('./icons/zip.svg'),
			fileExtensions: [
				'zip',
				'tar',
				'gz',
				'xz',
				'br',
				'bzip2',
				'gzip',
				'brotli',
				'7z',
				'rar',
				'tgz',
			],
		},
		{ file: () => import('./icons/exe.svg'), fileExtensions: ['exe', 'msi'] },
		{ file: () => import('./icons/java.svg'), fileExtensions: ['java', 'jar', 'jsp'] },
		{ file: () => import('./icons/c.svg'), fileExtensions: ['c', 'm'] },
		{ file: () => import('./icons/h.svg'), fileExtensions: ['h'] },
		{ file: () => import('./icons/cpp.svg'), fileExtensions: ['cc', 'cpp', 'mm', 'cxx'] },
		{ file: () => import('./icons/hpp.svg'), fileExtensions: ['hpp'] },
		{ file: () => import('./icons/go.svg'), fileExtensions: ['go'] },
		{ file: () => import('./icons/go-mod.svg'), fileNames: ['go.mod', 'go.sum'] },
		{ file: () => import('./icons/python.svg'), fileExtensions: ['py'] },
		{
			file: () => import('./icons/python-misc.svg'),
			fileExtensions: ['pyc', 'whl'],
			fileNames: ['requirements.txt', 'pipfile', '.python-version', 'manifest.in'],
		},
		{ file: () => import('./icons/url.svg'), fileExtensions: ['url'] },
		{
			file: () => import('./icons/console.svg'),
			fileExtensions: [
				'sh',
				'ksh',
				'csh',
				'tcsh',
				'zsh',
				'bash',
				'bat',
				'cmd',
				'awk',
				'fish',
			],
		},
		{
			file: () => import('./icons/powershell.svg'),
			fileExtensions: ['ps1', 'psm1', 'psd1', 'ps1xml', 'psc1', 'pssc'],
		},
		{
			file: () => import('./icons/gradle.svg'),
			fileExtensions: ['gradle'],
			fileNames: ['gradle.properties', 'gradlew', 'gradle-wrapper.properties'],
		},
		{ file: () => import('./icons/word.svg'), fileExtensions: ['doc', 'docx', 'rtf'] },
		{
			file: () => import('./icons/certificate.svg'),
			fileExtensions: ['cer', 'cert', 'crt'],
			fileNames: [
				'license',
				'license.md',
				'license.txt',
				'licence',
				'licence.md',
				'licence.txt',
				'unlicense',
				'unlicense.md',
				'unlicense.txt',
			],
		},
		{
			file: () => import('./icons/key.svg'),
			fileExtensions: ['pub', 'key', 'pem', 'asc', 'gpg'],
			fileNames: ['.htpasswd'],
		},
		{
			file: () => import('./icons/font.svg'),
			fileExtensions: [
				'woff',
				'woff2',
				'ttf',
				'eot',
				'suit',
				'otf',
				'bmap',
				'fnt',
				'odttf',
				'ttc',
				'font',
				'fonts',
				'sui',
				'ntf',
				'mrf',
			],
		},
		{ file: () => import('./icons/lib.svg'), fileExtensions: ['lib', 'bib'] },
		{ file: () => import('./icons/ruby.svg'), fileExtensions: ['rb', 'erb'] },
		{ file: () => import('./icons/gemfile.svg'), fileNames: ['gemfile'] },
		{ file: () => import('./icons/fsharp.svg'), fileExtensions: ['fs', 'fsx', 'fsi', 'fsproj'] },
		{ file: () => import('./icons/swift.svg'), fileExtensions: ['swift'] },
		{ file: () => import('./icons/arduino.svg'), fileExtensions: ['ino'] },
		{
			file: () => import('./icons/docker.svg'),
			fileExtensions: ['dockerignore', 'dockerfile'],
			fileNames: [
				'dockerfile',
				'docker-compose.yml',
				'docker-compose.yaml',
				'docker-compose.dev.yml',
				'docker-compose.local.yml',
				'docker-compose.ci.yml',
				'docker-compose.override.yml',
				'docker-compose.staging.yml',
				'docker-compose.prod.yml',
				'docker-compose.production.yml',
				'docker-compose.test.yml',
			],
		},
		{ file: () => import('./icons/tex.svg'), fileExtensions: ['tex', 'cls', 'sty'] },
		{
			file: () => import('./icons/powerpoint.svg'),
			fileExtensions: [
				'pptx',
				'ppt',
				'pptm',
				'potx',
				'potm',
				'ppsx',
				'ppsm',
				'pps',
				'ppam',
				'ppa',
			],
		},
		{
			file: () => import('./icons/video.svg'),
			fileExtensions: [
				'webm',
				'mkv',
				'flv',
				'vob',
				'ogv',
				'ogg',
				'gifv',
				'avi',
				'mov',
				'qt',
				'wmv',
				'yuv',
				'rm',
				'rmvb',
				'mp4',
				'm4v',
				'mpg',
				'mp2',
				'mpeg',
				'mpe',
				'mpv',
				'm2v',
			],
		},
		{ file: () => import('./icons/virtual.svg'), fileExtensions: ['vdi', 'vbox', 'vbox-prev'] },
		{ file: () => import('./icons/email.svg'), fileExtensions: ['ics'], fileNames: ['.mailmap'] },
		{ file: () => import('./icons/audio.svg'), fileExtensions: ['mp3', 'flac', 'm4a', 'wma', 'aiff'] },
		{ file: () => import('./icons/coffee.svg'), fileExtensions: ['coffee', 'cson', 'iced'] },
		{ file: () => import('./icons/document.svg'), fileExtensions: ['txt'] },
		{
			file: () => import('./icons/graphql.svg'),
			fileExtensions: ['graphql', 'gql'],
			fileNames: ['.graphqlconfig'],
		},
		{ file: () => import('./icons/rust.svg'), fileExtensions: ['rs'] },
		{ file: () => import('./icons/raml.svg'), fileExtensions: ['raml'] },
		{ file: () => import('./icons/xaml.svg'), fileExtensions: ['xaml'] },
		{ file: () => import('./icons/haskell.svg'), fileExtensions: ['hs'] },
		{ file: () => import('./icons/kotlin.svg'), fileExtensions: ['kt', 'kts'] },
		{
			file: () => import('./icons/git.svg'),
			fileExtensions: ['patch'],
			fileNames: [
				'.gitignore',
				'.gitconfig',
				'.gitattributes',
				'.gitmodules',
				'.gitkeep',
				'git-history',
			],
		},
		{ file: () => import('./icons/lua.svg'), fileExtensions: ['lua'], fileNames: ['.luacheckrc'] },
		{ file: () => import('./icons/clojure.svg'), fileExtensions: ['clj', 'cljs', 'cljc'] },
		{ file: () => import('./icons/groovy.svg'), fileExtensions: ['groovy'] },
		{ file: () => import('./icons/r.svg'), fileExtensions: ['r', 'rmd'], fileNames: ['.Rhistory'] },
		{ file: () => import('./icons/dart.svg'), fileExtensions: ['dart'] },
		{ file: () => import('./icons/actionscript.svg'), fileExtensions: ['as'] },
		{ file: () => import('./icons/mxml.svg'), fileExtensions: ['mxml'] },
		{ file: () => import('./icons/autohotkey.svg'), fileExtensions: ['ahk'] },
		{ file: () => import('./icons/flash.svg'), fileExtensions: ['swf'] },
		{ file: () => import('./icons/swc.svg'), fileExtensions: ['swc'] },
		{
			file: () => import('./icons/cmake.svg'),
			fileExtensions: ['cmake'],
			fileNames: ['cmakelists.txt', 'cmakecache.txt'],
		},
		{
			file: () => import('./icons/assembly.svg'),
			fileExtensions: [
				'asm',
				'a51',
				'inc',
				'nasm',
				's',
				'ms',
				'agc',
				'ags',
				'aea',
				'argus',
				'mitigus',
				'binsource',
			],
		},
		{ file: () => import('./icons/vue.svg'), fileExtensions: ['vue'] },
		{ file: () => import('./icons/vue-config.svg'), fileNames: ['vue.config.js', 'vue.config.ts'] },
		{
			file: () => import('./icons/vuex-store.svg'),
			fileExtensions: ['store.js', 'store.ts'],
			fileNames: ['store.js', 'store.ts'],
			enabledFor: [IconPack.Vuex],
		},
		{
			file: () => import('./icons/nuxt.svg'),
			fileNames: ['nuxt.config.js', 'nuxt.config.ts'],
			enabledFor: [IconPack.Vuex, IconPack.Vue],
		},
		{ file: () => import('./icons/ocaml.svg'), fileExtensions: ['ml', 'mli', 'cmx'] },
		{ file: () => import('./icons/javascript-map.svg'), fileExtensions: ['js.map', 'mjs.map'] },
		{ file: () => import('./icons/css-map.svg'), fileExtensions: ['css.map'] },
		{ file: () => import('./icons/lock.svg'), fileExtensions: ['lock'] },
		{ file: () => import('./icons/handlebars.svg'), fileExtensions: ['hbs', 'mustache'] },
		{ file: () => import('./icons/perl.svg'), fileExtensions: ['pl', 'pm'] },
		{ file: () => import('./icons/haxe.svg'), fileExtensions: ['hx'] },
		{ file: () => import('./icons/test-ts.svg'), fileExtensions: ['spec.ts', 'test.ts', 'ts.snap'] },
		{
			file: () => import('./icons/test-jsx.svg'),
			fileExtensions: [
				'spec.tsx',
				'test.tsx',
				'tsx.snap',
				'spec.jsx',
				'test.jsx',
				'jsx.snap',
			],
		},
		{ file: () => import('./icons/test-js.svg'), fileExtensions: ['spec.js', 'test.js', 'js.snap'] },
		{
			file: () => import('./icons/angular.svg'),
			fileExtensions: ['module.ts', 'module.js', 'ng-template'],
			fileNames: ['angular-cli.json', '.angular-cli.json', 'angular.json'],
			enabledFor: [IconPack.Angular, IconPack.Ngrx],
		},
		{
			file: () => import('./icons/angular-component.svg'),
			fileExtensions: ['component.ts', 'component.js'],
			enabledFor: [IconPack.Angular, IconPack.Ngrx],
		},
		{
			file: () => import('./icons/angular-guard.svg'),
			fileExtensions: ['guard.ts', 'guard.js'],
			enabledFor: [IconPack.Angular, IconPack.Ngrx],
		},
		{
			file: () => import('./icons/angular-service.svg'),
			fileExtensions: ['service.ts', 'service.js'],
			enabledFor: [IconPack.Angular, IconPack.Ngrx],
		},
		{
			file: () => import('./icons/angular-pipe.svg'),
			fileExtensions: ['pipe.ts', 'pipe.js', 'filter.js'],
			enabledFor: [IconPack.Angular, IconPack.Ngrx],
		},
		{
			file: () => import('./icons/angular-directive.svg'),
			fileExtensions: ['directive.ts', 'directive.js'],
			enabledFor: [IconPack.Angular, IconPack.Ngrx],
		},
		{
			file: () => import('./icons/angular-resolver.svg'),
			fileExtensions: ['resolver.ts', 'resolver.js'],
			enabledFor: [IconPack.Angular, IconPack.Ngrx],
		},
		{ file: () => import('./icons/puppet.svg'), fileExtensions: ['pp'] },
		{ file: () => import('./icons/elixir.svg'), fileExtensions: ['ex', 'exs', 'eex', 'leex'] },
		{ file: () => import('./icons/livescript.svg'), fileExtensions: ['ls'] },
		{ file: () => import('./icons/erlang.svg'), fileExtensions: ['erl'] },
		{ file: () => import('./icons/twig.svg'), fileExtensions: ['twig'] },
		{ file: () => import('./icons/julia.svg'), fileExtensions: ['jl'] },
		{ file: () => import('./icons/elm.svg'), fileExtensions: ['elm'] },
		{ file: () => import('./icons/purescript.svg'), fileExtensions: ['pure', 'purs'] },
		{ file: () => import('./icons/smarty.svg'), fileExtensions: ['tpl'] },
		{ file: () => import('./icons/stylus.svg'), fileExtensions: ['styl'] },
		{ file: () => import('./icons/reason.svg'), fileExtensions: ['re', 'rei'] },
		{ file: () => import('./icons/bucklescript.svg'), fileExtensions: ['cmj'] },
		{ file: () => import('./icons/merlin.svg'), fileExtensions: ['merlin'] },
		{ file: () => import('./icons/verilog.svg'), fileExtensions: ['v', 'vhd', 'sv', 'svh'] },
		{ file: () => import('./icons/mathematica.svg'), fileExtensions: ['nb'] },
		{ file: () => import('./icons/wolframlanguage.svg'), fileExtensions: ['wl', 'wls'] },
		{ file: () => import('./icons/nunjucks.svg'), fileExtensions: ['njk', 'nunjucks'] },
		{ file: () => import('./icons/robot.svg'), fileExtensions: ['robot'] },
		{ file: () => import('./icons/solidity.svg'), fileExtensions: ['sol'] },
		{ file: () => import('./icons/autoit.svg'), fileExtensions: ['au3'] },
		{ file: () => import('./icons/haml.svg'), fileExtensions: ['haml'] },
		{ file: () => import('./icons/yang.svg'), fileExtensions: ['yang'] },
		{ file: () => import('./icons/mjml.svg'), fileExtensions: ['mjml'] },
		{
			file: () => import('./icons/terraform.svg'),
			fileExtensions: ['tf', 'tf.json', 'tfvars', 'tfstate'],
		},
		{ file: () => import('./icons/laravel.svg'), fileExtensions: ['blade.php', 'inky.php'] },
		{ file: () => import('./icons/applescript.svg'), fileExtensions: ['applescript'] },
		{ file: () => import('./icons/cake.svg'), fileExtensions: ['cake'] },
		{ file: () => import('./icons/cucumber.svg'), fileExtensions: ['feature'] },
		{ file: () => import('./icons/nim.svg'), fileExtensions: ['nim', 'nimble'] },
		{ file: () => import('./icons/apiblueprint.svg'), fileExtensions: ['apib', 'apiblueprint'] },
		{ file: () => import('./icons/riot.svg'), fileExtensions: ['tag'] },
		{ file: () => import('./icons/vfl.svg'), fileExtensions: ['vfl'], fileNames: ['.vfl'] },
		{ file: () => import('./icons/kl.svg'), fileExtensions: ['kl'], fileNames: ['.kl'] },
		{
			file: () => import('./icons/postcss.svg'),
			fileExtensions: ['pcss', 'sss'],
			fileNames: ['postcss.config.js', '.postcssrc.js', '.postcssrc', '.postcssrc.json', '.postcssrc.yml'],
		},
		{ file: () => import('./icons/todo.svg'), fileExtensions: ['todo'] },
		{ file: () => import('./icons/coldfusion.svg'), fileExtensions: ['cfml', 'cfc', 'lucee', 'cfm'] },
		{ file: () => import('./icons/cabal.svg'), fileExtensions: ['cabal'] },
		{ file: () => import('./icons/nix.svg'), fileExtensions: ['nix'] },
		{ file: () => import('./icons/slim.svg'), fileExtensions: ['slim'] },
		{ file: () => import('./icons/http.svg'), fileExtensions: ['http', 'rest'] },
		{ file: () => import('./icons/restql.svg'), fileExtensions: ['rql', 'restql'] },
		{ file: () => import('./icons/kivy.svg'), fileExtensions: ['kv'] },
		{
			file: () => import('./icons/graphcool.svg'),
			fileExtensions: ['graphcool'],
			fileNames: ['project.graphcool'],
		},
		{ file: () => import('./icons/sbt.svg'), fileExtensions: ['sbt'] },
		{
			file: () => import('./icons/webpack.svg'),
			fileNames: [
				'webpack.js',
				'webpack.ts',
				'webpack.base.js',
				'webpack.base.ts',
				'webpack.config.js',
				'webpack.config.ts',
				'webpack.common.js',
				'webpack.common.ts',
				'webpack.config.common.js',
				'webpack.config.common.ts',
				'webpack.config.common.babel.js',
				'webpack.config.common.babel.ts',
				'webpack.dev.js',
				'webpack.dev.ts',
				'webpack.config.dev.js',
				'webpack.config.dev.ts',
				'webpack.config.dev.babel.js',
				'webpack.config.dev.babel.ts',
				'webpack.prod.js',
				'webpack.prod.ts',
				'webpack.server.js',
				'webpack.server.ts',
				'webpack.client.js',
				'webpack.client.ts',
				'webpack.config.server.js',
				'webpack.config.server.ts',
				'webpack.config.client.js',
				'webpack.config.client.ts',
				'webpack.config.production.babel.js',
				'webpack.config.production.babel.ts',
				'webpack.config.prod.babel.js',
				'webpack.config.prod.babel.ts',
				'webpack.config.prod.js',
				'webpack.config.prod.ts',
				'webpack.config.production.js',
				'webpack.config.production.ts',
				'webpack.config.staging.js',
				'webpack.config.staging.ts',
				'webpack.config.babel.js',
				'webpack.config.babel.ts',
				'webpack.config.base.babel.js',
				'webpack.config.base.babel.ts',
				'webpack.config.base.js',
				'webpack.config.base.ts',
				'webpack.config.staging.babel.js',
				'webpack.config.staging.babel.ts',
				'webpack.config.coffee',
				'webpack.config.test.js',
				'webpack.config.test.ts',
				'webpack.config.vendor.js',
				'webpack.config.vendor.ts',
				'webpack.config.vendor.production.js',
				'webpack.config.vendor.production.ts',
				'webpack.test.js',
				'webpack.test.ts',
				'webpack.dist.js',
				'webpack.dist.ts',
				'webpackfile.js',
				'webpackfile.ts',
			],
		},
		{ file: () => import('./icons/ionic.svg'), fileNames: ['ionic.config.json', '.io-config.json'] },
		{
			file: () => import('./icons/gulp.svg'),
			fileNames: ['gulpfile.js', 'gulpfile.ts', 'gulpfile.babel.js'],
		},
		{
			file: () => import('./icons/nodejs.svg'),
			fileNames: ['package.json', 'package-lock.json', '.nvmrc', '.esmrc'],
		},
		{ file: () => import('./icons/npm.svg'), fileNames: ['.npmignore', '.npmrc'] },
		{
			file: () => import('./icons/yarn.svg'),
			fileNames: [
				'.yarnrc',
				'yarn.lock',
				'.yarnclean',
				'.yarn-integrity',
				'yarn-error.log',
			],
		},
		{ file: () => import('./icons/android.svg'), fileNames: ['androidmanifest.xml'] },
		{
			file: () => import('./icons/tune.svg'),
			fileNames: [
				'.env',
				'.env.example',
				'.env.local',
				'.env.dev',
				'.env.development',
				'.env.prod',
				'.env.production',
				'.env.staging',
				'.env.preview',
				'.env.test',
				'.env.development.local',
				'.env.production.local',
				'.env.test.local',
			],
		},
		{ file: () => import('./icons/babel.svg'), fileNames: ['.babelrc', '.babelrc.js', 'babel.config.js'] },
		{
			file: () => import('./icons/contributing.svg'),
			fileNames: ['contributing.md'],
		},
		{ file: () => import('./icons/readme.svg'), fileNames: ['readme.md', 'readme.txt', 'readme'] },
		{
			file: () => import('./icons/changelog.svg'),
			fileNames: ['changelog', 'changelog.md', 'changelog.txt'],
		},
		{
			file: () => import('./icons/credits.svg'),
			fileNames: ['credits', 'credits.txt', 'credits.md'],
		},
		{
			file: () => import('./icons/authors.svg'),
			fileNames: ['authors', 'authors.md', 'authors.txt'],
		},
		{ file: () => import('./icons/flow.svg'), fileNames: ['.flowconfig'] },
		{ file: () => import('./icons/favicon.svg'), fileNames: ['favicon.ico'] },
		{
			file: () => import('./icons/karma.svg'),
			fileNames: [
				'karma.conf.js',
				'karma.conf.ts',
				'karma.conf.coffee',
				'karma.config.js',
				'karma.config.ts',
				'karma-main.js',
				'karma-main.ts',
			],
		},
		{ file: () => import('./icons/bithound.svg'), fileNames: ['.bithoundrc'] },
		{ file: () => import('./icons/appveyor.svg'), fileNames: ['.appveyor.yml', 'appveyor.yml'] },
		{ file: () => import('./icons/travis.svg'), fileNames: ['.travis.yml'] },
		{
			file: () => import('./icons/protractor.svg'),
			fileNames: [
				'protractor.conf.js',
				'protractor.conf.ts',
				'protractor.conf.coffee',
				'protractor.config.js',
				'protractor.config.ts',
			],
		},
		{ file: () => import('./icons/fusebox.svg'), fileNames: ['fuse.js'] },
		{ file: () => import('./icons/heroku.svg'), fileNames: ['procfile', 'procfile.windows'] },
		{ file: () => import('./icons/editorconfig.svg'), fileNames: ['.editorconfig'] },
		{ file: () => import('./icons/gitlab.svg'), fileExtensions: ['gitlab-ci.yml'] },
		{ file: () => import('./icons/bower.svg'), fileNames: ['.bowerrc', 'bower.json'] },
		{
			file: () => import('./icons/eslint.svg'),
			fileNames: [
				'.eslintrc.js',
				'.eslintrc.yaml',
				'.eslintrc.yml',
				'.eslintrc.json',
				'.eslintrc',
				'.eslintignore',
			],
		},
		{
			file: () => import('./icons/conduct.svg'),
			fileNames: ['code_of_conduct.md', 'code_of_conduct.txt'],
		},
		{ file: () => import('./icons/watchman.svg'), fileNames: ['.watchmanconfig'] },
		{ file: () => import('./icons/aurelia.svg'), fileNames: ['aurelia.json'] },
		{
			file: () => import('./icons/mocha.svg'),
			fileNames: [
				'mocha.opts',
				'.mocharc.yml',
				'.mocharc.yaml',
				'.mocharc.js',
				'.mocharc.json',
				'.mocharc.jsonc',
			],
		},
		{ file: () => import('./icons/jenkins.svg'), fileNames: ['jenkinsfile'] },
		{ file: () => import('./icons/firebase.svg'), fileNames: ['firebase.json', '.firebaserc'] },
		{
			file: () => import('./icons/rollup.svg'),
			fileNames: [
				'rollup.config.js',
				'rollup.config.ts',
				'rollup-config.js',
				'rollup-config.ts',
				'rollup.config.common.js',
				'rollup.config.common.ts',
				'rollup.config.base.js',
				'rollup.config.base.ts',
				'rollup.config.prod.js',
				'rollup.config.prod.ts',
				'rollup.config.dev.js',
				'rollup.config.dev.ts',
				'rollup.config.prod.vendor.js',
				'rollup.config.prod.vendor.ts',
			],
		},
		{ file: () => import('./icons/hack.svg'), fileNames: ['.hhconfig'] },
		{
			file: () => import('./icons/stylelint_light.svg'),
			fileNames: [
				'.stylelintrc',
				'stylelint.config.js',
				'.stylelintrc.json',
				'.stylelintrc.yaml',
				'.stylelintrc.yml',
				'.stylelintrc.js',
				'.stylelintignore',
			],
		},
		{ file: () => import('./icons/code-climate_light.svg'), fileNames: ['.codeclimate.yml'] },
		{
			file: () => import('./icons/prettier.svg'),
			fileNames: ['.prettierrc', 'prettier.config.js', '.prettierrc.js', '.prettierrc.json', '.prettierrc.yaml', '.prettierrc.yml', '.prettierignore'],
		},
		{ file: () => import('./icons/nodemon.svg'), fileNames: ['nodemon.json', 'nodemon-debug.json'] },
		{
			file: () => import('./icons/ngrx-reducer.svg'),
			fileExtensions: ['reducer.ts', 'rootReducer.ts'],
			enabledFor: [IconPack.Ngrx],
		},
		{ file: () => import('./icons/ngrx-state.svg'), fileExtensions: ['state.ts'], enabledFor: [IconPack.Ngrx] },
		{ file: () => import('./icons/ngrx-actions.svg'), fileExtensions: ['actions.ts'], enabledFor: [IconPack.Ngrx] },
		{ file: () => import('./icons/ngrx-effects.svg'), fileExtensions: ['effects.ts'], enabledFor: [IconPack.Ngrx] },
		{ file: () => import('./icons/ngrx-entity.svg'), fileNames: ['.entity'], enabledFor: [IconPack.Ngrx] },
		{ file: () => import('./icons/webhint.svg'), fileNames: ['.hintrc'] },
		{ file: () => import('./icons/browserlist_light.svg'), fileNames: ['browserslist', '.browserslistrc'] },
		{ file: () => import('./icons/crystal_light.svg'), fileExtensions: ['cr', 'ecr'] },
		{ file: () => import('./icons/snyk.svg'), fileNames: ['.snyk'] },
		{ file: () => import('./icons/drone_light.svg'), fileExtensions: ['drone.yml'], fileNames: ['.drone.yml'] },
		{ file: () => import('./icons/cuda.svg'), fileExtensions: ['cu', 'cuh'] },
		{ file: () => import('./icons/log.svg'), fileExtensions: ['log'] },
		{ file: () => import('./icons/dotjs.svg'), fileExtensions: ['def', 'dot', 'jst'] },
		{ file: () => import('./icons/ejs.svg'), fileExtensions: ['ejs'] },
		{ file: () => import('./icons/sequelize.svg'), fileNames: ['.sequelizerc'] },
		{
			file: () => import('./icons/gatsby.svg'),
			fileNames: ['gatsby.config.js', 'gatsby-config.js', 'gatsby-node.js', 'gatsby-browser.js', 'gatsby-ssr.js'],
		},
		{
			file: () => import('./icons/wakatime_light.svg'),
			fileNames: ['.wakatime-project'],
			fileExtensions: ['.wakatime-project'],
		},
		{ file: () => import('./icons/circleci_light.svg'), fileNames: ['circle.yml'] },
		{ file: () => import('./icons/cloudfoundry.svg'), fileNames: ['.cfignore'] },
		{
			file: () => import('./icons/grunt.svg'),
			fileNames: [
				'gruntfile.js',
				'gruntfile.ts',
				'gruntfile.coffee',
				'gruntfile.babel.js',
				'gruntfile.babel.ts',
				'gruntfile.babel.coffee',
			],
		},
		{
			file: () => import('./icons/jest.svg'),
			fileNames: ['jest.config.js', 'jest.config.ts', 'jest.config.json', 'jest.setup.js', 'jest.setup.ts', 'jest.json', '.jestrc', 'jest.teardown.js'],
		},
		{ file: () => import('./icons/processing_light.svg'), fileExtensions: ['pde'] },
		{
			file: () => import('./icons/storybook.svg'),
			fileExtensions: ['stories.js', 'stories.jsx', 'story.js', 'story.jsx', 'stories.ts', 'stories.tsx', 'story.ts', 'story.tsx'],
		},
		{ file: () => import('./icons/wepy.svg'), fileExtensions: ['wpy'] },
		{ file: () => import('./icons/fastlane.svg'), fileNames: ['fastfile', 'appfile'] },
		{ file: () => import('./icons/hcl_light.svg'), fileExtensions: ['hcl'] },
		{ file: () => import('./icons/helm.svg'), fileNames: ['.helmignore'] },
		{ file: () => import('./icons/san.svg'), fileExtensions: ['san'] },
		{ file: () => import('./icons/wallaby.svg'), fileNames: ['wallaby.js', 'wallaby.conf.js'] },
		{ file: () => import('./icons/django.svg'), fileExtensions: ['djt'] },
		{ file: () => import('./icons/stencil_light.svg'), fileNames: ['stencil.config.js', 'stencil.config.ts'] },
		{ file: () => import('./icons/red.svg'), fileExtensions: ['red'] },
		{ file: () => import('./icons/makefile.svg'), fileNames: ['makefile'] },
		{ file: () => import('./icons/foxpro.svg'), fileExtensions: ['fxp', 'prg'] },
		{ file: () => import('./icons/i18n.svg'), fileExtensions: ['pot', 'po', 'mo'] },
		{ file: () => import('./icons/webassembly.svg'), fileExtensions: ['wat', 'wasm'] },
		{ file: () => import('./icons/semantic-release_light.svg'), fileNames: ['.releaserc', 'release.config.js'] },
		{
			file: () => import('./icons/bitbucket.svg'),
			fileNames: ['bitbucket-pipelines.yaml', 'bitbucket-pipelines.yml'],
		},
		{ file: () => import('./icons/jupyter.svg'), fileExtensions: ['ipynb'] },
		{ file: () => import('./icons/d.svg'), fileExtensions: ['d'] },
		{ file: () => import('./icons/mdx.svg'), fileExtensions: ['mdx'] },
		{ file: () => import('./icons/ballerina.svg'), fileExtensions: ['bal', 'balx'] },
		{ file: () => import('./icons/racket.svg'), fileExtensions: ['rkt'] },
		{ file: () => import('./icons/bazel.svg'), fileExtensions: ['bzl', 'bazel'] },
		{ file: () => import('./icons/mint.svg'), fileExtensions: ['mint'] },
		{ file: () => import('./icons/velocity.svg'), fileExtensions: ['vm', 'fhtml', 'vtl'] },
		{ file: () => import('./icons/godot.svg'), fileExtensions: ['gd'] },
		{ file: () => import('./icons/godot-assets.svg'), fileExtensions: ['godot', 'tres', 'tscn'] },
		{ file: () => import('./icons/azure-pipelines.svg'), fileNames: ['azure-pipelines.yml'] },
		{ file: () => import('./icons/azure.svg'), fileExtensions: ['azcli'] },
		{ file: () => import('./icons/vagrant.svg'), fileNames: ['vagrantfile'], fileExtensions: ['vagrantfile'] },
		{ file: () => import('./icons/prisma.svg'), fileNames: ['prisma.yml'], fileExtensions: ['prisma'] },
		{ file: () => import('./icons/razor.svg'), fileExtensions: ['cshtml', 'vbhtml'] },
		{ file: () => import('./icons/asciidoc.svg'), fileExtensions: ['ad', 'adoc', 'asciidoc'] },
		{ file: () => import('./icons/istanbul.svg'), fileNames: ['.nycrc', '.nycrc.json'] },
		{ file: () => import('./icons/edge.svg'), fileExtensions: ['edge'] },
		{ file: () => import('./icons/scheme.svg'), fileExtensions: ['ss', 'scm'] },
		{ file: () => import('./icons/tailwindcss.svg'), fileNames: ['tailwind.js', 'tailwind.config.js'] },
		{ file: () => import('./icons/3d.svg'), fileExtensions: ['stl', 'obj'] },
		{ file: () => import('./icons/buildkite.svg'), fileNames: ['buildkite.yml', 'buildkite.yaml'] },
		{ file: () => import('./icons/netlify.svg'), fileNames: ['netlify.toml'] },
		{ file: () => import('./icons/svg.svg'), fileExtensions: ['svg'] },
		{ file: () => import('./icons/svelte.svg'), fileExtensions: ['svelte'] },
		{ file: () => import('./icons/vim.svg'), fileExtensions: ['vimrc', 'gvimrc', 'exrc'] },
	],
};
